version: '3.9'
services:
########## Serviços para funcionamento do kafka #########
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.11-1.1.0
    ports:
      - "9092:9092"
    environment:
      # KAFKAJS_NO_PARTITIONER_WARNING: 1
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "checkout:1:1,payment-request:1:1,payment-response:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#Serviço products
  products:
    container_name: products
    build: ./apps/backend/products
    ports:
      - 4001:4001
    platform: linux/x86_64
    working_dir: /app-backend
    depends_on:
      products_db:
        condition: service_healthy
    environment:
      - APP_PORT=4001
      - JWT_SECRET=jwt_secret
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=products_db
      - DB_PORT=3306
    restart: 'always'
    healthcheck: 
      test: ["CMD", "lsof", "-t", "-i:4001"]
      timeout: 10s
      retries: 5
#Banco de dados do serviço products
  products_db:
    image: mysql:8.0.21
    container_name: products_db
    platform: linux/x86_64
    ports:
      - 3002:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
#Serviço checkout
  checkout:
    container_name: checkout
    build: ./apps/backend/checkout
    ports:
      - 4002:4002
    platform: linux/x86_64
    working_dir: /app-backend
    environment:
      - JWT_SECRET=jwt_secret
      - APP_PORT=4002
      - PRODUCT_API_URL=http://localhost:4001
      - KAFKA_HOST=localhost
    restart: 'always'
    healthcheck: 
      test: ["CMD", "lsof", "-t", "-i:4002"]
      timeout: 10s
      retries: 5
#Serviço payment-api
  payment-api:
    container_name: payment-api
    build: ./apps/backend/payment-api
    platform: linux/x86_64
    working_dir: /app-backend
    depends_on:
      products_db:
        condition: service_healthy
    restart: 'always'